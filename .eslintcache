[{"D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\index.js":"1","D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\reportWebVitals.js":"2","D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\App.js":"3","D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\button.js":"4"},{"size":302,"mtime":1609852198395,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1609852198395,"results":"7","hashOfConfig":"6"},{"size":9495,"mtime":1609869359181,"results":"8","hashOfConfig":"6"},{"size":185,"mtime":1609852198394,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ponwqo",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\index.js",[],["21","22"],"D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\reportWebVitals.js",[],["23","24"],"D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\App.js",["25","26"],"import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n    const [status, setStatus] = useState(\"\");\r\n    const [result, setResult] = useState(\"\");\r\n    const [display, setDisplay] = useState(\"\");\r\n\r\n    function kbdInput(e){\r\n        console.log(e);\r\n    }\r\n\r\n    function statusHandler(e) {\r\n        try {\r\n            if (\r\n                e === \"+\" ||\r\n                e === \"-\" ||\r\n                e === \"*\" ||\r\n                e === \"/\" ||\r\n                e === \"**\" ||\r\n                e === \"%\"\r\n            ) {\r\n                var n = status.length - 1;\r\n                if (status.slice(-2) === \"**\") {\r\n                    setStatus(status.slice(0, n - 1) + e);\r\n                    console.log(status);\r\n                } else if (\r\n                    status[n] === \"+\" ||\r\n                    status[n] === \"-\" ||\r\n                    status[n] === \"/\" ||\r\n                    status[n] === \"*\" ||\r\n                    status[n] === \"%\"\r\n                ) {\r\n                    setStatus(status.slice(0, n) + e);\r\n                    console.log(status);\r\n                } else {\r\n                    setStatus(status + e);\r\n                    console.log(status);\r\n                }\r\n            } else if (result !== \"\") {\r\n                setStatus(e);\r\n                setResult(\"\");\r\n            } else {\r\n                setStatus(status + e);\r\n                console.log(status);\r\n            }\r\n        } catch {\r\n            setStatus(status + e);\r\n            console.log(status);\r\n        }\r\n    }\r\n    function displayHandler(e) {\r\n        try {\r\n            if (\r\n                e === \"+\" ||\r\n                e === \"-\" ||\r\n                e === \"x\" ||\r\n                e === \"/\" ||\r\n                e === \"^\" ||\r\n                e === \"%\"\r\n            ) {\r\n                var n = display.length - 1;\r\n                if (\r\n                    display[n] === \"+\" ||\r\n                    display[n] === \"-\" ||\r\n                    display[n] === \"/\" ||\r\n                    display[n] === \"x\" ||\r\n                    display[n] === \"^\" ||\r\n                    display[n] === \"%\"\r\n                ) {\r\n                    setDisplay(display.slice(0, n) + e);\r\n                    console.log(display);\r\n                } else {\r\n                    setDisplay(display + e);\r\n                    console.log(display);\r\n                }\r\n            } \r\n            else {\r\n                setDisplay(display + e);\r\n                console.log(display);\r\n            }\r\n        } catch {\r\n            setDisplay(display + e);\r\n            console.log(display);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Calculator</h1>\r\n            <div className=\"container\">\r\n                <div className=\"res\">\r\n                    <p className=\"eq\">=</p>\r\n                    <p className=\"result\">{result}</p>\r\n                </div>\r\n                <input type=\"text\" className=\"txt\" value={display} onKeyPress ={(e)=>{kbdInput(e.target.value)}} ></input>\r\n                <button\r\n                    onClick={() => {\r\n                        setStatus(\"\");\r\n                        setResult(\"\");\r\n                        setDisplay(\"\");\r\n                    }}\r\n                    className=\"btnc spl\"\r\n                    id=\"c\">\r\n                    C\r\n                </button>\r\n                <button\r\n                    className=\"btn+- spl\"\r\n                    id=\"+/-\"\r\n                    onClick={() => {\r\n                        try {\r\n                            var temp = -eval(status);\r\n                            setResult(temp);\r\n                            setStatus(temp);\r\n                            setDisplay(\"\");\r\n                            console.log(typeof result);\r\n                        } catch {\r\n                            alert(\"Please check the expression\");\r\n                        }\r\n                    }}>\r\n                    +/-\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"%\");\r\n                        displayHandler(\"%\");\r\n                    }}\r\n                    className=\"btn% spl\"\r\n                    id=\"%\">\r\n                    %\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"+\");\r\n                        setResult(\"\");\r\n                        displayHandler(result.toString() + \"+\");\r\n                    }}\r\n                    className=\"btn+ spl\">\r\n                    +\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"1\");\r\n                        displayHandler(\"1\");\r\n                    }}\r\n                    className=\"btn1\">\r\n                    1\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"2\");\r\n                        displayHandler(\"2\");\r\n                    }}\r\n                    className=\"btn2\">\r\n                    2\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"3\");\r\n                        displayHandler(\"3\");\r\n                    }}\r\n                    className=\"btn3\">\r\n                    3\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"-\");\r\n                        setResult(\"\");\r\n                        displayHandler(result.toString() + \"-\");\r\n                    }}\r\n                    className=\"btn- spl\">\r\n                    -\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"4\");\r\n                        displayHandler(\"4\");\r\n                    }}\r\n                    className=\"btn4\">\r\n                    4\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"5\");\r\n                        displayHandler(\"5\");\r\n                    }}\r\n                    className=\"btn5\">\r\n                    5\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"6\");\r\n                        displayHandler(\"6\");\r\n                    }}\r\n                    className=\"btn6\">\r\n                    6\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"*\");\r\n                        setResult(\"\");\r\n                        displayHandler(result.toString() + \"x\");\r\n                    }}\r\n                    className=\"btnx spl\">\r\n                    x\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"7\");\r\n                        displayHandler(\"7\");\r\n                    }}\r\n                    className=\"btn7\">\r\n                    7\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"8\");\r\n                        displayHandler(\"8\");\r\n                    }}\r\n                    className=\"btn8\">\r\n                    8\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"9\");\r\n                        displayHandler(\"9\");\r\n                    }}\r\n                    className=\"btn9\">\r\n                    9\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"/\");\r\n                        setResult(\"\");\r\n                        displayHandler(result.toString() + \"/\");\r\n                    }}\r\n                    className=\"btn/ spl\">\r\n                    /\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"**\");\r\n                        setResult(\"\");\r\n                        displayHandler(result.toString() + \"^\");\r\n                    }}\r\n                    className=\"btn^ spl\">\r\n                    ^\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\"0\");\r\n                        displayHandler(\"0\");\r\n                    }}\r\n                    className=\"btn0\">\r\n                    0\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        statusHandler(\".\");\r\n                        displayHandler(\".\");\r\n                    }}\r\n                    className=\"btn. spl\">\r\n                    .\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        try {\r\n                            var res = eval(status);\r\n                            setResult(res);\r\n                            setStatus(res);\r\n                            setDisplay(\"\");\r\n                        } catch {\r\n                            alert(\"Please check the expression.\");\r\n                        }\r\n                    }}\r\n                    className=\"btn= spl\">\r\n                    =\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\sayyam.code\\Web\\ReactJS\\calculator_react\\src\\button.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"27","replacedBy":"31"},{"ruleId":"29","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":112,"column":41,"nodeType":"35","messageId":"36","endLine":112,"endColumn":45},{"ruleId":"33","severity":1,"message":"34","line":268,"column":39,"nodeType":"35","messageId":"36","endLine":268,"endColumn":43},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],["37"],["38"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]